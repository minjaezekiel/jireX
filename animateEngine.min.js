!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=t():e.AnimationEngine=t()}("undefined"!=typeof window?window:this,(function(){class e{constructor(e){this.container=document.getElementById(e),this.sceneManager=new t,this.animationManager=new i(this.sceneManager),this.physicsManager=new s(this.sceneManager),this.uiManager=new o(this,this.sceneManager,this.animationManager,this.physicsManager),this.editManager=new n(this.sceneManager,this.uiManager),this.mediaManager=new a(this.sceneManager,this.animationManager),this.recordingManager=new r(this.sceneManager,this.animationManager,this.mediaManager),this.init()}init(){this.sceneManager.init(this.container),this.uiManager.init(),this.editManager.init(),this.mediaManager.init(),this.recordingManager.init(),this.animate(),document.getElementById("loadingOverlay").style.display="none"}animate(){requestAnimationFrame((()=>this.animate())),this.sceneManager.update(),this.physicsManager.update(),this.animationManager.update(),this.editManager.update(),this.mediaManager.update(),this.recordingManager.update(),this.uiManager.update(),this.sceneManager.render()}}class t{constructor(){this.scene=null,this.camera=null,this.renderer=null,this.controls=null,this.selectedObject=null,this.objects=new Map,this.lights=new Map,this.groups=new Map,this.objectProperties=new Map,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2}init(e){this.scene=new THREE.Scene,this.scene.background=new THREE.Color(2236962);const t=e.clientWidth/e.clientHeight;this.camera=new THREE.PerspectiveCamera(75,t,.1,1e3),this.camera.position.set(5,5,5),this.camera.lookAt(0,0,0),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(e.clientWidth,e.clientHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,e.appendChild(this.renderer.domElement),this.controls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.05,this.addDefaultLights();const i=new THREE.GridHelper(10,10);this.scene.add(i);const s=new THREE.AxesHelper(5);this.scene.add(s),window.addEventListener("resize",(()=>this.onWindowResize())),this.setupMouseEvents(e)}setupMouseEvents(e){e.addEventListener("mousedown",(e=>this.onMouseDown(e))),e.addEventListener("mousemove",(e=>this.onMouseMove(e))),e.addEventListener("mouseup",(e=>this.onMouseUp(e))),e.addEventListener("touchstart",(e=>this.onTouchStart(e))),e.addEventListener("touchmove",(e=>this.onTouchMove(e))),e.addEventListener("touchend",(e=>this.onTouchEnd(e)))}onMouseDown(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-(e.clientY-t.top)/t.height*2+1,this.raycaster.setFromCamera(this.mouse,this.camera);const i=this.raycaster.intersectObjects(Array.from(this.objects.values()));if(i.length>0){const e=i[0].object;if(e.isLight||e.parent&&e.parent.isLight){const t=e.isLight?e:e.parent;return void this.selectObject(t)}if(e.isMesh)return void this.selectObject(e);if("Group"===e.type)return void this.selectObject(e)}else this.selectObject(null)}onMouseMove(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-(e.clientY-t.top)/t.height*2+1}onMouseUp(e){}onTouchStart(e){if(1===e.touches.length){const t=e.touches[0],i=new MouseEvent("mousedown",{clientX:t.clientX,clientY:t.clientY});this.onMouseDown(i)}}onTouchMove(e){if(1===e.touches.length){const t=e.touches[0],i=new MouseEvent("mousemove",{clientX:t.clientX,clientY:t.clientY});this.onMouseMove(i)}}onTouchEnd(e){const t=new MouseEvent("mouseup",{});this.onMouseUp(t)}addDefaultLights(){const e=new THREE.AmbientLight(16777215,.5);this.scene.add(e),this.lights.set(e.uuid,e);const t=new THREE.DirectionalLight(16777215,.8);t.position.set(5,10,7),t.castShadow=!0,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,t.shadow.camera.near=.5,t.shadow.camera.far=500,t.shadow.camera.left=-20,t.shadow.camera.right=20,t.shadow.camera.top=20,t.shadow.camera.bottom=-20,this.scene.add(t),this.lights.set(t.uuid,t)}onWindowResize(){const e=this.renderer.domElement.parentElement;this.camera.aspect=e.clientWidth/e.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(e.clientWidth,e.clientHeight)}update(){this.controls.update()}render(){this.renderer.render(this.scene,this.camera)}addObject(e,t,i={}){return e.name=t||`Object_${this.objects.size+1}`,this.scene.add(e),this.objects.set(e.uuid,e),this.objectProperties.set(e.uuid,{visible:!0,locked:!1,physicsEnabled:!1,mass:1,friction:.5,restitution:.3,isStatic:!1,...i}),e}removeObject(e){e.parent&&e.parent.remove(e),this.objects.delete(e.uuid),this.objectProperties.delete(e.uuid),this.lights.has(e.uuid)&&this.lights.delete(e.uuid),this.groups.has(e.uuid)&&this.groups.delete(e.uuid),this.selectedObject===e&&(this.selectedObject=null)}selectObject(e){this.selectedObject=e}getSelectedObject(){return this.selectedObject}getObjectByUUID(e){return this.objects.get(e)}getAllObjects(){return Array.from(this.objects.values())}getObjectProperties(e){return this.objectProperties.get(e)||{}}setObjectProperties(e,t){this.objectProperties.has(e)&&this.objectProperties.set(e,{...this.objectProperties.get(e),...t})}createCube(e,t={}){const i=new THREE.BoxGeometry(1,1,1),s=new THREE.MeshStandardMaterial({color:5227511,metalness:.2,roughness:.5}),n=new THREE.Mesh(i,s);return n.castShadow=!0,n.receiveShadow=!0,this.addObject(n,e,t)}createSphere(e,t={}){const i=new THREE.SphereGeometry(.5,32,32),s=new THREE.MeshStandardMaterial({color:5227511,metalness:.2,roughness:.5}),n=new THREE.Mesh(i,s);return n.castShadow=!0,n.receiveShadow=!0,this.addObject(n,e,t)}createCylinder(e,t={}){const i=new THREE.CylinderGeometry(.5,.5,1,32),s=new THREE.MeshStandardMaterial({color:5227511,metalness:.2,roughness:.5}),n=new THREE.Mesh(i,s);return n.castShadow=!0,n.receiveShadow=!0,this.addObject(n,e,t)}createCone(e,t={}){const i=new THREE.ConeGeometry(.5,1,32),s=new THREE.MeshStandardMaterial({color:5227511,metalness:.2,roughness:.5}),n=new THREE.Mesh(i,s);return n.castShadow=!0,n.receiveShadow=!0,this.addObject(n,e,t)}createTorus(e,t={}){const i=new THREE.TorusGeometry(.5,.2,16,100),s=new THREE.MeshStandardMaterial({color:5227511,metalness:.2,roughness:.5}),n=new THREE.Mesh(i,s);return n.castShadow=!0,n.receiveShadow=!0,this.addObject(n,e,t)}createTetrahedron(e,t={}){const i=new THREE.TetrahedronGeometry(.7,0),s=new THREE.MeshStandardMaterial({color:5227511,metalness:.2,roughness:.5}),n=new THREE.Mesh(i,s);return n.castShadow=!0,n.receiveShadow=!0,this.addObject(n,e,t)}createLight(e,t,i={}){let s,n;switch(e){case"point":default:s=new THREE.PointLight(16777215,1,100),s.position.set(0,3,0),s.castShadow=!0;break;case"spot":s=new THREE.SpotLight(16777215,1),s.position.set(0,5,0),s.angle=Math.PI/6,s.penumbra=.1,s.castShadow=!0;break;case"directional":s=new THREE.DirectionalLight(16777215,1),s.position.set(5,10,7),s.castShadow=!0;break;case"ambient":s=new THREE.AmbientLight(16777215,.5)}return"point"===e?n=new THREE.PointLightHelper(s,.5):"spot"===e?n=new THREE.SpotLightHelper(s):"directional"===e&&(n=new THREE.DirectionalLightHelper(s,1)),n&&s.add(n),this.scene.add(s),this.lights.set(s.uuid,s),s.name=t||`Light_${this.lights.size}`,this.objectProperties.set(s.uuid,{visible:!0,locked:!1,...i}),s}createGroup(e,t={}){const i=new THREE.Group;return i.name=e||`Group_${this.objects.size+1}`,this.scene.add(i),this.objects.set(i.uuid,i),this.groups.set(i.uuid,i),this.objectProperties.set(i.uuid,{visible:!0,locked:!1,...t}),i}addToGroup(e,t){e.parent&&e.parent.remove(e),t.add(e)}removeFromGroup(e){e.parent&&"Group"===e.parent.type&&(e.parent.remove(e),this.scene.add(e))}toggleObjectVisibility(e){const t=e.uuid;if(this.objectProperties.has(t)){const i=this.objectProperties.get(t);return i.visible=!i.visible,e.visible=i.visible,this.objectProperties.set(t,i),i.visible}return!0}toggleObjectLock(e){const t=e.uuid;if(this.objectProperties.has(t)){const e=this.objectProperties.get(t);return e.locked=!e.locked,this.objectProperties.set(t,e),e.locked}return!1}exportScene(){const e={objects:[],lights:[],groups:[],metadata:{version:"1.0",exportDate:(new Date).toISOString()}};return this.objects.forEach(((t,i)=>{"Group"===t.type?e.groups.push({uuid:t.uuid,name:t.name,type:t.type,position:[t.position.x,t.position.y,t.position.z],rotation:[t.rotation.x,t.rotation.y,t.rotation.z],scale:[t.scale.x,t.scale.y,t.scale.z],children:t.children.map((e=>e.uuid)),properties:this.objectProperties.get(i)}):t.isLight?e.lights.push({uuid:t.uuid,name:t.name,type:t.type,position:[t.position.x,t.position.y,t.position.z],color:t.color.getHex(),intensity:t.intensity,properties:this.objectProperties.get(i)}):t.isMesh&&e.objects.push({uuid:t.uuid,name:t.name,type:t.type,geometry:t.geometry.type,material:{type:t.material.type,color:t.material.color.getHex()},position:[t.position.x,t.position.y,t.position.z],rotation:[t.rotation.x,t.rotation.y,t.rotation.z],scale:[t.scale.x,t.scale.y,t.scale.z],properties:this.objectProperties.get(i)})})),JSON.stringify(e,null,2)}importScene(e){try{const t=JSON.parse(e);return this.objects.forEach((e=>{this.removeObject(e)})),t.groups&&t.groups.forEach((e=>{const t=this.createGroup(e.name,e.properties);t.position.set(...e.position),t.rotation.set(...e.rotation),t.scale.set(...e.scale)})),t.objects&&t.objects.forEach((e=>{let t;switch(e.geometry){case"BoxGeometry":default:t=this.createCube(e.name,e.properties);break;case"SphereGeometry":t=this.createSphere(e.name,e.properties);break;case"CylinderGeometry":t=this.createCylinder(e.name,e.properties);break;case"ConeGeometry":t=this.createCone(e.name,e.properties);break;case"TorusGeometry":t=this.createTorus(e.name,e.properties);break;case"TetrahedronGeometry":t=this.createTetrahedron(e.name,e.properties)}if(t.position.set(...e.position),t.rotation.set(...e.rotation),t.scale.set(...e.scale),e.material&&e.material.color&&t.material.color.setHex(e.material.color),e.parent){const i=this.getObjectByUUID(e.parent);i&&"Group"===i.type&&this.addToGroup(t,i)}})),t.lights&&t.lights.forEach((e=>{const t=this.createLight(e.type.toLowerCase(),e.name,e.properties);t.position.set(...e.position),t.color.setHex(e.color),t.intensity=e.intensity})),!0}catch(e){return console.error("Error importing scene:",e),!1}}importModel(e,t){const i=new FileReader;i.onload=i=>{const s=i.target.result,n=new THREE.GLTFLoader;try{n.parse(s,"",(i=>{const s=i.scene;this.addObject(s,e.name.replace(/\.[^/.]+$/,"")),i.animations&&i.animations.length>0&&i.animations.forEach(((e,t)=>{const i=e.name||`Animation_${t+1}`;this.animationManager.createAnimation(i,e.duration,"repeat"),this.animationManager.animationClips.set(i,e)})),s.traverse((e=>{e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0,this.objects.set(e.uuid,e),this.objectProperties.set(e.uuid,{visible:!0,locked:!1,physicsEnabled:!1}))})),t(!0,s)}),(e=>{console.error("Error parsing GLTF:",e),t(!1,null)}))}catch(e){console.error("Error loading model:",e),t(!1,null)}},i.readAsArrayBuffer(e)}}class i{constructor(e){this.sceneManager=e,this.animations=new Map,this.selectedAnimation=null,this.isPlaying=!1,this.currentTime=0,this.clock=new THREE.Clock,this.mixers=new Map,this.tweens=new Map,this.animationClips=new Map}update(){if(this.isPlaying){const e=this.clock.getDelta();this.currentTime+=e,this.mixers.forEach((t=>{t.update(e)})),this.tweens.forEach((e=>{e.update()})),this.selectedAnimation&&this.currentTime>=this.selectedAnimation.duration&&("once"===this.selectedAnimation.loop?this.stop():"repeat"===this.selectedAnimation.loop?this.currentTime=0:"pingpong"===this.selectedAnimation.loop&&this.mixers.forEach((e=>{e.timeScale=-e.timeScale})))}}createAnimation(e,t,i="once"){const s={name:e,duration:t,loop:i,keyframes:new Map,curves:new Map,tweens:new Map};return this.animations.set(e,s),s}deleteAnimation(e){return!!this.animations.has(e)&&(this.animations.delete(e),this.selectedAnimation&&this.selectedAnimation.name===e&&(this.selectedAnimation=null),!0)}duplicateAnimation(e,t){if(this.animations.has(e)){const i=this.animations.get(e),s={...i,name:t,keyframes:new Map(i.keyframes),curves:new Map(i.curves),tweens:new Map(i.tweens)};return this.animations.set(t,s),s}return null}selectAnimation(e){return!!this.animations.has(e)&&(this.selectedAnimation=this.animations.get(e),!0)}getSelectedAnimation(){return this.selectedAnimation}getAllAnimations(){return Array.from(this.animations.values())}play(){this.selectedAnimation&&(this.isPlaying=!0,this.clock.start(),this.mixers.forEach(((e,t)=>{const i=this.sceneManager.getObjectByUUID(t);if(i&&this.selectedAnimation.keyframes.has(t)){const t=this.createAnimationClip(i,this.selectedAnimation),s=e.clipAction(t);s.reset(),s.play()}})),this.tweens.forEach((e=>{e.start()})))}pause(){this.isPlaying=!1,this.clock.stop(),this.mixers.forEach((e=>{e.timeScale=0})),this.tweens.forEach((e=>{e.pause()}))}stop(){this.isPlaying=!1,this.currentTime=0,this.clock.stop(),this.mixers.forEach((e=>{e.timeScale=1,e.time=0})),this.tweens.forEach((e=>{e.stop()}))}setCurrentTime(e){this.currentTime=e,this.mixers.forEach((t=>{t.setTime(e)})),this.tweens.forEach((t=>{t.seek(e)}))}addKeyframe(e,t,i){if(!this.selectedAnimation)return!1;const s=e.uuid;this.selectedAnimation.keyframes.has(s)||this.selectedAnimation.keyframes.set(s,[]);const n=this.selectedAnimation.keyframes.get(s),o=n.findIndex((e=>e.time===t));return-1!==o?n[o]={time:t,properties:i}:(n.push({time:t,properties:i}),n.sort(((e,t)=>e.time-t.time))),this.mixers.has(s)||this.mixers.set(s,new THREE.AnimationMixer(e)),!0}removeKeyframe(e,t){if(!this.selectedAnimation)return!1;const i=e.uuid;if(!this.selectedAnimation.keyframes.has(i))return!1;const s=this.selectedAnimation.keyframes.get(i),n=s.findIndex((e=>e.time===t));return-1!==n&&(s.splice(n,1),0===s.length&&this.mixers.delete(i),!0)}getKeyframes(e){if(!this.selectedAnimation)return[];const t=e.uuid;return this.selectedAnimation.keyframes.has(t)?this.selectedAnimation.keyframes.get(t):[]}createAnimationClip(e,t){const i=e.uuid,s=t.keyframes.get(i);if(!s||0===s.length)return null;const n=[],o=[],a=[];s.forEach((e=>{e.properties.position&&(o.push(e.time),a.push(...e.properties.position))})),o.length>0&&n.push(new THREE.VectorKeyframeTrack(`${e.uuid}.position`,o,a));const r=[],c=[];s.forEach((e=>{if(e.properties.rotation){r.push(e.time);const t=new THREE.Quaternion;t.setFromEuler(new THREE.Euler(e.properties.rotation[0],e.properties.rotation[1],e.properties.rotation[2])),c.push(...t.toArray())}})),r.length>0&&n.push(new THREE.QuaternionKeyframeTrack(`${e.uuid}.quaternion`,r,c));const d=[],l=[];return s.forEach((e=>{e.properties.scale&&(d.push(e.time),l.push(...e.properties.scale))})),d.length>0&&n.push(new THREE.VectorKeyframeTrack(`${e.uuid}.scale`,d,l)),new THREE.AnimationClip(t.name,t.duration,n)}setCurve(e,t,i,s){if(!this.selectedAnimation)return!1;const n=e.uuid;this.selectedAnimation.curves.has(n)||this.selectedAnimation.curves.set(n,{});const o=this.selectedAnimation.curves.get(n);return o[t]||(o[t]={}),o[t][i]=s,!0}getCurve(e,t,i){if(!this.selectedAnimation)return null;const s=e.uuid;if(!this.selectedAnimation.curves.has(s))return null;const n=this.selectedAnimation.curves.get(s);return n[t]&&n[t][i]?n[t][i]:null}createTween(e,t,i,s,n="linear"){const o=e.uuid;if(!this.selectedAnimation)return!1;this.selectedAnimation.tweens.has(o)||this.selectedAnimation.tweens.set(o,[]);const a=this.selectedAnimation.tweens.get(o),r={from:{...t},to:{...i},duration:s,easing:n,startTime:this.currentTime,object:e};a.push(r),this.tweens.has(o)||this.tweens.set(o,[]);return this.tweens.get(o).push(this.createTweenInstance(r)),!0}createTweenInstance(e){const t={startTime:e.startTime,duration:e.duration,from:e.from,to:e.to,object:e.object,easing:e.easing,update:function(){const e=this.animationManager.currentTime-this.startTime;if(e<0||e>this.duration)return;const t=Math.min(1,e/this.duration),i=this.applyEasing(t,this.easing);for(const e in this.from)if(this.to.hasOwnProperty(e)){const t=this.from[e],s=t+(this.to[e]-t)*i;"position"===e?this.object.position.set(s.x||s[0],s.y||s[1],s.z||s[2]):"rotation"===e?this.object.rotation.set(s.x||s[0],s.y||s[1],s.z||s[2]):"scale"===e?this.object.scale.set(s.x||s[0],s.y||s[1],s.z||s[2]):"color"===e&&this.object.material&&this.object.material.color.setHex(s)}},applyEasing:function(e,t){switch(t){case"easeIn":return e*e;case"easeOut":return e*(2-e);case"easeInOut":return e<.5?2*e*e:(4-2*e)*e-1;default:return e}},start:function(){this.startTime=this.animationManager.currentTime},pause:function(){},stop:function(){},seek:function(e){}};return t.animationManager=this,t}exportAnimation(e){if(!this.animations.has(e))return null;const t=this.animations.get(e),i={name:t.name,duration:t.duration,loop:t.loop,keyframes:{},curves:{},tweens:{},metadata:{version:"1.0",exportDate:(new Date).toISOString()}};return t.keyframes.forEach(((e,t)=>{i.keyframes[t]=e})),t.curves.forEach(((e,t)=>{i.curves[t]=e})),t.tweens.forEach(((e,t)=>{i.tweens[t]=e})),JSON.stringify(i,null,2)}importAnimation(e){try{const t=JSON.parse(e),i=this.createAnimation(t.name,t.duration,t.loop);return t.keyframes&&Object.keys(t.keyframes).forEach((e=>{i.keyframes.set(e,t.keyframes[e])})),t.curves&&Object.keys(t.curves).forEach((e=>{i.curves.set(e,t.curves[e])})),t.tweens&&Object.keys(t.tweens).forEach((e=>{i.tweens.set(e,t.tweens[e])})),i}catch(e){return console.error("Error importing animation:",e),null}}}class s{constructor(e){this.sceneManager=e,this.world=null,this.enabled=!1,this.objects=new Map,this.gravity=-9.8,this.timeStep=1/60}init(){this.world=new CANNON.World,this.world.gravity.set(0,this.gravity,0),this.world.broadphase=new CANNON.NaiveBroadphase,this.world.solver.iterations=10}update(){this.enabled&&this.world&&(this.world.step(this.timeStep),this.objects.forEach(((e,t)=>{const i=this.sceneManager.getObjectByUUID(t);i&&(i.position.copy(e.position),i.quaternion.copy(e.quaternion))})))}enable(){this.enabled=!0,this.world||this.init()}disable(){this.enabled=!1}toggle(){return this.enabled=!this.enabled,this.enabled&&!this.world&&this.init(),this.enabled}addObject(e,t={}){if(!this.enabled||!this.world)return;const i=e.uuid;let s;if(e.geometry){if("BoxGeometry"===e.geometry.type){const i=e.geometry.parameters,n=new CANNON.Vec3(i.width/2,i.height/2,i.depth/2),o=new CANNON.Box(n);s=new CANNON.Body({mass:t.mass||1,position:new CANNON.Vec3(e.position.x,e.position.y,e.position.z),shape:o})}else if("SphereGeometry"===e.geometry.type){const i=e.geometry.parameters.radius,n=new CANNON.Sphere(i);s=new CANNON.Body({mass:t.mass||1,position:new CANNON.Vec3(e.position.x,e.position.y,e.position.z),shape:n})}else if("CylinderGeometry"===e.geometry.type){const i=e.geometry.parameters,n=new CANNON.Cylinder(i.radiusTop,i.radiusBottom,i.height,i.radialSegments);s=new CANNON.Body({mass:t.mass||1,position:new CANNON.Vec3(e.position.x,e.position.y,e.position.z),shape:n})}else if("ConeGeometry"===e.geometry.type){const i=e.geometry.parameters,n=new CANNON.Cylinder(0,i.radius,i.height,i.radialSegments);s=new CANNON.Body({mass:t.mass||1,position:new CANNON.Vec3(e.position.x,e.position.y,e.position.z),shape:n})}else if("TorusGeometry"===e.geometry.type){const i=e.geometry.parameters,n=i.radius+i.tube,o=new CANNON.Sphere(n);s=new CANNON.Body({mass:t.mass||1,position:new CANNON.Vec3(e.position.x,e.position.y,e.position.z),shape:o})}else if("TetrahedronGeometry"===e.geometry.type){const i=e.geometry.parameters.radius,n=new CANNON.Sphere(i);s=new CANNON.Body({mass:t.mass||1,position:new CANNON.Vec3(e.position.x,e.position.y,e.position.z),shape:n})}s&&(s.material=new CANNON.Material,s.material.friction=t.friction||.5,s.material.restitution=t.restitution||.3,t.isStatic&&(s.mass=0,s.type=CANNON.Body.STATIC),this.world.addBody(s),this.objects.set(i,s))}}removeObject(e){const t=e.uuid;if(this.objects.has(t)){const e=this.objects.get(t);this.world.removeBody(e),this.objects.delete(t)}}updateObjectProperties(e,t){const i=e.uuid;if(this.objects.has(i)){const e=this.objects.get(i);void 0!==t.mass&&(e.mass=t.mass,e.updateMassProperties()),void 0!==t.friction&&(e.material.friction=t.friction),void 0!==t.restitution&&(e.material.restitution=t.restitution),void 0!==t.isStatic&&(t.isStatic?(e.mass=0,e.type=CANNON.Body.STATIC):(e.mass=t.mass||1,e.type=CANNON.Body.DYNAMIC),e.updateMassProperties())}}}class n{constructor(e,t){this.sceneManager=e,this.uiManager=t,this.currentTool="select",this.isDragging=!1,this.dragStart=new THREE.Vector2,this.dragObject=null,this.dragOffset=new THREE.Vector3,this.transformGizmo=null,this.lightHelper=null,this.sculptOverlay=null,this.sculptCursor=null,this.sculptSize=.5,this.sculptStrength=1,this.sculptTool="push",this.isSculpting=!1,this.originalVertices=null,this.modifiedVertices=null}init(){this.initTransformGizmo(),this.initLightHelper(),this.initSculptOverlay(),this.setupEventListeners()}initTransformGizmo(){this.transformGizmo=document.getElementById("transformGizmo")}initLightHelper(){this.lightHelper=document.getElementById("lightHelper")}initSculptOverlay(){this.sculptOverlay=document.getElementById("sculptOverlay"),this.sculptCursor=document.getElementById("sculptCursor")}setupEventListeners(){document.getElementById("selectTool").addEventListener("click",(()=>this.setTool("select"))),document.getElementById("moveTool").addEventListener("click",(()=>this.setTool("move"))),document.getElementById("rotateTool").addEventListener("click",(()=>this.setTool("rotate"))),document.getElementById("scaleTool").addEventListener("click",(()=>this.setTool("scale"))),document.getElementById("sculptPushTool").addEventListener("click",(()=>this.setSculptTool("push"))),document.getElementById("sculptPullTool").addEventListener("click",(()=>this.setSculptTool("pull"))),document.getElementById("sculptSmoothTool").addEventListener("click",(()=>this.setSculptTool("smooth"))),document.getElementById("sculptRidgeTool").addEventListener("click",(()=>this.setSculptTool("ridge"))),document.getElementById("sculptPinchTool").addEventListener("click",(()=>this.setSculptTool("pinch"))),document.getElementById("sculptFlattenTool").addEventListener("click",(()=>this.setSculptTool("flatten"))),document.getElementById("sculptSize").addEventListener("input",(e=>{this.sculptSize=parseFloat(e.target.value),document.getElementById("sculptSizeValue").textContent=this.sculptSize.toFixed(1)})),document.getElementById("sculptStrength").addEventListener("input",(e=>{this.sculptStrength=parseFloat(e.target.value),document.getElementById("sculptStrengthValue").textContent=this.sculptStrength.toFixed(1)}));const e=document.getElementById("viewport");e.addEventListener("mousedown",(e=>this.onMouseDown(e))),e.addEventListener("mousemove",(e=>this.onMouseMove(e))),e.addEventListener("mouseup",(e=>this.onMouseUp(e))),e.addEventListener("touchstart",(e=>this.onTouchStart(e))),e.addEventListener("touchmove",(e=>this.onTouchMove(e))),e.addEventListener("touchend",(e=>this.onTouchEnd(e)))}setTool(e){this.currentTool=e,document.querySelectorAll(".edit-tools .tool-button").forEach((e=>{e.classList.remove("active")})),"select"===e?document.getElementById("selectTool").classList.add("active"):"move"===e?document.getElementById("moveTool").classList.add("active"):"rotate"===e?document.getElementById("rotateTool").classList.add("active"):"scale"===e&&document.getElementById("scaleTool").classList.add("active"),this.updateTransformGizmo(),"select"===e||"move"===e||"rotate"===e||"scale"===e?this.sculptOverlay.classList.remove("active"):this.sculptOverlay.classList.add("active")}setSculptTool(e){this.sculptTool=e,document.querySelectorAll(".sculpt-tools .tool-button").forEach((e=>{e.classList.remove("active")})),"push"===e?document.getElementById("sculptPushTool").classList.add("active"):"pull"===e?document.getElementById("sculptPullTool").classList.add("active"):"smooth"===e?document.getElementById("sculptSmoothTool").classList.add("active"):"ridge"===e?document.getElementById("sculptRidgeTool").classList.add("active"):"pinch"===e?document.getElementById("sculptPinchTool").classList.add("active"):"flatten"===e&&document.getElementById("sculptFlattenTool").classList.add("active")}updateTransformGizmo(){const e=this.sceneManager.getSelectedObject();if(!e||"select"===this.currentTool)return void(this.transformGizmo.style.display="none");const t=new THREE.Vector3;e.getWorldPosition(t),t.project(this.sceneManager.camera);const i=document.getElementById("viewport").getBoundingClientRect(),s=(.5*t.x+.5)*i.width,n=(.5*-t.y+.5)*i.height;this.transformGizmo.style.display="block",this.transformGizmo.style.left=`${s}px`,this.transformGizmo.style.top=`${n}px`,this.createTransformHandles(e,s,n)}createTransformHandles(e,t,i){this.transformGizmo.innerHTML="","move"===this.currentTool?this.createMoveHandles(e,t,i):"rotate"===this.currentTool?this.createRotateHandles(e,t,i):"scale"===this.currentTool&&this.createScaleHandles(e,t,i)}createMoveHandles(e,t,i){const s=50,n=document.createElement("div");n.className="transform-handle x",n.style.width="12px",n.style.height="12px",n.style.left=`${t+s}px`,n.style.top=i-6+"px",n.addEventListener("mousedown",(t=>this.startDrag(t,e,"x"))),this.transformGizmo.appendChild(n);const o=document.createElement("div");o.className="transform-handle y",o.style.width="12px",o.style.height="12px",o.style.left=t-6+"px",o.style.top=i-s+"px",o.addEventListener("mousedown",(t=>this.startDrag(t,e,"y"))),this.transformGizmo.appendChild(o);const a=document.createElement("div");a.className="transform-handle z",a.style.width="12px",a.style.height="12px",a.style.left=t-6+"px",a.style.top=`${i+s}px`,a.addEventListener("mousedown",(t=>this.startDrag(t,e,"z"))),this.transformGizmo.appendChild(a);const r=document.createElement("div");r.className="transform-plane x",r.style.width="12px",r.style.height="12px",r.style.left=`${t+25}px`,r.style.top=i-25+"px",r.addEventListener("mousedown",(t=>this.startDrag(t,e,"xy"))),this.transformGizmo.appendChild(r);const c=document.createElement("div");c.className="transform-plane z",c.style.width="12px",c.style.height="12px",c.style.left=`${t+25}px`,c.style.top=`${i+25}px`,c.addEventListener("mousedown",(t=>this.startDrag(t,e,"xz"))),this.transformGizmo.appendChild(c);const d=document.createElement("div");d.className="transform-plane y",d.style.width="12px",d.style.height="12px",d.style.left=t-25+"px",d.style.top=i-25+"px",d.addEventListener("mousedown",(t=>this.startDrag(t,e,"yz"))),this.transformGizmo.appendChild(d);const l=document.createElement("div");l.className="transform-handle xyz",l.style.width="12px",l.style.height="12px",l.style.left=t-6+"px",l.style.top=i-6+"px",l.addEventListener("mousedown",(t=>this.startDrag(t,e,"xyz"))),this.transformGizmo.appendChild(l)}createRotateHandles(e,t,i){const s=document.createElement("div");s.className="transform-handle x",s.style.width="12px",s.style.height="12px",s.style.left=`${t+50}px`,s.style.top=i-6+"px",s.addEventListener("mousedown",(t=>this.startDrag(t,e,"rotateX"))),this.transformGizmo.appendChild(s);const n=document.createElement("div");n.className="transform-handle y",n.style.width="12px",n.style.height="12px",n.style.left=t-6+"px",n.style.top=i-50+"px",n.addEventListener("mousedown",(t=>this.startDrag(t,e,"rotateY"))),this.transformGizmo.appendChild(n);const o=document.createElement("div");o.className="transform-handle z",o.style.width="12px",o.style.height="12px",o.style.left=t-6+"px",o.style.top=`${i+50}px`,o.addEventListener("mousedown",(t=>this.startDrag(t,e,"rotateZ"))),this.transformGizmo.appendChild(o)}createScaleHandles(e,t,i){const s=document.createElement("div");s.className="transform-handle x",s.style.width="12px",s.style.height="12px",s.style.left=`${t+50}px`,s.style.top=i-6+"px",s.addEventListener("mousedown",(t=>this.startDrag(t,e,"scaleX"))),this.transformGizmo.appendChild(s);const n=document.createElement("div");n.className="transform-handle y",n.style.width="12px",n.style.height="12px",n.style.left=t-6+"px",n.style.top=i-50+"px",n.addEventListener("mousedown",(t=>this.startDrag(t,e,"scaleY"))),this.transformGizmo.appendChild(n);const o=document.createElement("div");o.className="transform-handle z",o.style.width="12px",o.style.height="12px",o.style.left=t-6+"px",o.style.top=`${i+50}px`,o.addEventListener("mousedown",(t=>this.startDrag(t,e,"scaleZ"))),this.transformGizmo.appendChild(o);const a=document.createElement("div");a.className="transform-handle xyz",a.style.width="12px",a.style.height="12px",a.style.left=t-6+"px",a.style.top=i-6+"px",a.addEventListener("mousedown",(t=>this.startDrag(t,e,"scaleUniform"))),this.transformGizmo.appendChild(a)}updateLightHelper(){const e=this.sceneManager.getSelectedObject();if(!e||!e.isLight)return void(this.lightHelper.style.display="none");const t=new THREE.Vector3;e.getWorldPosition(t),t.project(this.sceneManager.camera);const i=document.getElementById("viewport").getBoundingClientRect(),s=(.5*t.x+.5)*i.width,n=(.5*-t.y+.5)*i.height;this.lightHelper.style.display="block",this.lightHelper.innerHTML="";const o=document.createElement("div");o.className="light-handle",o.style.width="16px",o.style.height="16px",o.style.left=s-8+"px",o.style.top=n-8+"px",o.addEventListener("mousedown",(t=>this.startDrag(t,e,"light"))),this.lightHelper.appendChild(o);const a=document.createElement("div");a.className="light-line",a.style.width="2px",a.style.height="100px",a.style.left=s-1+"px",a.style.top=`${n}px`,a.style.transformOrigin="top center";const r=new THREE.Vector3;e.target?e.getWorldDirection(r):r.set(0,-1,0);const c=Math.atan2(r.x,-r.y)*(180/Math.PI);a.style.transform=`rotate(${c}deg)`,this.lightHelper.appendChild(a)}startDrag(e,t,i){e.preventDefault(),e.stopPropagation(),this.isDragging=!0,this.dragObject=t,this.dragAxis=i,this.dragStart.set(e.clientX,e.clientY),this.dragStartPosition=t.position.clone(),this.dragStartRotation=t.rotation.clone(),this.dragStartScale=t.scale.clone(),this.sceneManager.controls.enabled=!1}onMouseDown(e){if(this.sculptOverlay.classList.contains("active")){const t=this.sceneManager.getSelectedObject();t&&t.isMesh&&(this.isSculpting=!0,this.startSculpting(e,t))}}onMouseMove(e){if(this.isDragging&&this.dragObject&&this.handleDrag(e),this.isSculpting){const t=this.sceneManager.getSelectedObject();t&&t.isMesh&&this.handleSculpting(e,t)}if(this.updateTransformGizmo(),this.updateLightHelper(),this.sculptOverlay.classList.contains("active")){const t=document.getElementById("viewport").getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top;this.sculptCursor.style.left=i-25*this.sculptSize+"px",this.sculptCursor.style.top=s-25*this.sculptSize+"px",this.sculptCursor.style.width=50*this.sculptSize+"px",this.sculptCursor.style.height=50*this.sculptSize+"px"}}onMouseUp(e){this.isDragging&&(this.isDragging=!1,this.dragObject=null,this.sceneManager.controls.enabled=!0,this.uiManager.updateProperties()),this.isSculpting&&(this.isSculpting=!1,this.finishSculpting())}onTouchStart(e){if(1===e.touches.length){const t=e.touches[0],i=new MouseEvent("mousedown",{clientX:t.clientX,clientY:t.clientY});this.onMouseDown(i)}}onTouchMove(e){if(1===e.touches.length){const t=e.touches[0],i=new MouseEvent("mousemove",{clientX:t.clientX,clientY:t.clientY});this.onMouseMove(i)}}onTouchEnd(e){const t=new MouseEvent("mouseup",{});this.onMouseUp(t)}handleDrag(e){if(!this.isDragging||!this.dragObject)return;const t=e.clientX-this.dragStart.x,i=e.clientY-this.dragStart.y;if("x"===this.dragAxis)this.dragObject.position.x=this.dragStartPosition.x+.01*t;else if("y"===this.dragAxis)this.dragObject.position.y=this.dragStartPosition.y-.01*i;else if("z"===this.dragAxis)this.dragObject.position.z=this.dragStartPosition.z+.01*i;else if("rotateX"===this.dragAxis)this.dragObject.rotation.x=this.dragStartRotation.x+.01*i;else if("rotateY"===this.dragAxis)this.dragObject.rotation.y=this.dragStartRotation.y+.01*t;else if("rotateZ"===this.dragAxis)this.dragObject.rotation.z=this.dragStartRotation.z+.01*t;else if("scaleX"===this.dragAxis)this.dragObject.scale.x=Math.max(.1,this.dragStartScale.x+.01*t);else if("scaleY"===this.dragAxis)this.dragObject.scale.y=Math.max(.1,this.dragStartScale.y+.01*i);else if("scaleZ"===this.dragAxis)this.dragObject.scale.z=Math.max(.1,this.dragStartScale.z+.01*i);else if("scaleUniform"===this.dragAxis){const e=Math.max(.1,this.dragStartScale.x+.01*t);this.dragObject.scale.set(e,e,e)}else"light"===this.dragAxis&&(this.dragObject.position.x=this.dragStartPosition.x+.01*t,this.dragObject.position.y=this.dragStartPosition.y-.01*i);this.uiManager.updateProperties()}startSculpting(e,t){if(!t.isMesh)return;this.isSculpting=!0;const i=t.geometry;i.attributes.position&&(this.originalVertices=i.attributes.position.array.slice(),this.modifiedVertices=i.attributes.position.array.slice(),i.attributes.normal&&(this.originalNormals=i.attributes.normal.array.slice()))}handleSculpting(e,t){if(!this.isSculpting||!t.isMesh)return;const i=t.geometry;if(!i.attributes.position)return;const s=document.getElementById("viewport").getBoundingClientRect(),n=(e.clientX-s.left)/s.width*2-1,o=-(e.clientY-s.top)/s.height*2+1,a=new THREE.Raycaster;a.setFromCamera(new THREE.Vector2(n,o),this.sceneManager.camera);const r=a.intersectObject(t);if(0===r.length)return;const c=r[0].point,d=r[0].face,l=new THREE.Vector3;l.copy(d.normal),l.transformDirection(t.matrixWorld);const h=i.attributes.position.array,m=new THREE.Vector3;for(let e=0;e<h.length;e+=3){m.set(h[e],h[e+1],h[e+2]),m.applyMatrix4(t.matrixWorld);const s=m.distanceTo(c);if(s<this.sculptSize){const n=1-s/this.sculptSize,o=this.sculptStrength*n*.1;if("push"===this.sculptTool)m.sub(l.clone().multiplyScalar(o));else if("pull"===this.sculptTool)m.add(l.clone().multiplyScalar(o));else if("smooth"===this.sculptTool){const s=this.getVertexNeighbors(i,e/3),n=new THREE.Vector3;s.forEach((e=>{const t=3*e;n.x+=this.originalVertices[t],n.y+=this.originalVertices[t+1],n.z+=this.originalVertices[t+2]})),n.divideScalar(s.length),n.applyMatrix4(t.matrixWorld),m.lerp(n,.5*o)}else if("ridge"===this.sculptTool){const e=m.clone().sub(c).normalize();m.add(e.multiplyScalar(o))}else if("pinch"===this.sculptTool){const e=m.clone().sub(c).normalize();m.sub(e.multiplyScalar(o))}else if("flatten"===this.sculptTool){const e=c.clone(),t=l.clone(),i=m.clone().sub(e).dot(t);m.sub(t.clone().multiplyScalar(i*o))}m.applyMatrix4((new THREE.Matrix4).getInverse(t.matrixWorld)),h[e]=m.x,h[e+1]=m.y,h[e+2]=m.z}}i.attributes.position.needsUpdate=!0,i.computeVertexNormals()}getVertexNeighbors(e,t){const i=[],s=e.attributes.position;for(let e=0;e<s.count;e++)if(e!==t){const n=(new THREE.Vector3).fromBufferAttribute(s,t),o=(new THREE.Vector3).fromBufferAttribute(s,e);n.distanceTo(o)<.5&&i.push(e)}return i}finishSculpting(){this.isSculpting=!1,this.originalVertices=null,this.modifiedVertices=null,this.originalNormals=null}update(){this.updateTransformGizmo(),this.updateLightHelper()}}class o{constructor(e,t,i,s){this.animationEngine=e,this.sceneManager=t,this.animationManager=i,this.physicsManager=s,this.toolboxVisible=!0,this.activePanel="objects"}init(){this.setupEventListeners(),this.updateHierarchy(),this.updateProperties(),this.updateAnimations(),this.updateTimeline(),this.updateToolboxToggle()}setupEventListeners(){document.getElementById("toolboxToggle").addEventListener("click",(()=>{this.toggleToolbox()})),document.querySelectorAll(".nav-item").forEach((e=>{e.addEventListener("click",(()=>{const t=e.dataset.panel;this.showPanel(t)}))})),document.querySelectorAll(".tool-panel-close").forEach((e=>{e.addEventListener("click",(()=>{const t=e.dataset.panel;this.hidePanel(t)}))})),document.getElementById("addCube").addEventListener("click",(()=>{const e=this.sceneManager.createCube();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addSphere").addEventListener("click",(()=>{const e=this.sceneManager.createSphere();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addCylinder").addEventListener("click",(()=>{const e=this.sceneManager.createCylinder();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addCone").addEventListener("click",(()=>{const e=this.sceneManager.createCone();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addTorus").addEventListener("click",(()=>{const e=this.sceneManager.createTorus();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addTetrahedron").addEventListener("click",(()=>{const e=this.sceneManager.createTetrahedron();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addPointLight").addEventListener("click",(e=>{e.preventDefault();const t=this.sceneManager.createLight("point");this.sceneManager.selectObject(t),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addSpotLight").addEventListener("click",(e=>{e.preventDefault();const t=this.sceneManager.createLight("spot");this.sceneManager.selectObject(t),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addDirectionalLight").addEventListener("click",(e=>{e.preventDefault();const t=this.sceneManager.createLight("directional");this.sceneManager.selectObject(t),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addAmbientLight").addEventListener("click",(e=>{e.preventDefault();const t=this.sceneManager.createLight("ambient");this.sceneManager.selectObject(t),this.updateHierarchy(),this.updateProperties()})),document.getElementById("addGroup").addEventListener("click",(()=>{const e=this.sceneManager.createGroup();this.sceneManager.selectObject(e),this.updateHierarchy(),this.updateProperties()})),document.getElementById("importModel").addEventListener("click",(()=>{document.getElementById("modelFileInput").click()})),document.getElementById("modelFileInput").addEventListener("change",(e=>{const t=e.target.files[0];t&&this.sceneManager.importModel(t,((e,t)=>{e?(this.sceneManager.selectObject(t),this.updateHierarchy(),this.updateProperties(),this.showNotification("Model imported successfully","success")):this.showNotification("Failed to import model","error")}))})),document.getElementById("deleteObject").addEventListener("click",(()=>{const e=this.sceneManager.getSelectedObject();e&&(this.sceneManager.removeObject(e),this.updateHierarchy(),this.updateProperties())})),document.getElementById("propName").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.name=e.target.value,this.updateHierarchy())})),document.getElementById("propPosX").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.position.x=parseFloat(e.target.value))})),document.getElementById("propPosY").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.position.y=parseFloat(e.target.value))})),document.getElementById("propPosZ").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.position.z=parseFloat(e.target.value))})),document.getElementById("propRotX").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.rotation.x=parseFloat(e.target.value))})),document.getElementById("propRotY").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.rotation.y=parseFloat(e.target.value))})),document.getElementById("propRotZ").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.rotation.z=parseFloat(e.target.value))})),document.getElementById("propScaleX").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.scale.x=parseFloat(e.target.value))})),document.getElementById("propScaleY").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.scale.y=parseFloat(e.target.value))})),document.getElementById("propScaleZ").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&(t.scale.z=parseFloat(e.target.value))})),document.getElementById("propColor").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();t&&t.material&&t.material.color.set(e.target.value)})),document.getElementById("physicsEnabled").addEventListener("change",(e=>{const t=this.sceneManager.getSelectedObject();if(t){const i=t.uuid,s=this.sceneManager.getObjectProperties(i);s.physicsEnabled=e.target.checked,this.sceneManager.setObjectProperties(i,s),e.target.checked?this.physicsManager.addObject(t,s):this.physicsManager.removeObject(t),document.getElementById("physicsProperties").classList.toggle("active",e.target.checked)}})),document.getElementById("propMass").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();if(t){const i=t.uuid,s=this.sceneManager.getObjectProperties(i);s.mass=parseFloat(e.target.value),this.sceneManager.setObjectProperties(i,s),this.physicsManager.updateObjectProperties(t,s)}})),document.getElementById("propFriction").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();if(t){const i=t.uuid,s=this.sceneManager.getObjectProperties(i);s.friction=parseFloat(e.target.value),this.sceneManager.setObjectProperties(i,s),this.physicsManager.updateObjectProperties(t,s)}})),document.getElementById("propRestitution").addEventListener("input",(e=>{const t=this.sceneManager.getSelectedObject();if(t){const i=t.uuid,s=this.sceneManager.getObjectProperties(i);s.restitution=parseFloat(e.target.value),this.sceneManager.setObjectProperties(i,s),this.physicsManager.updateObjectProperties(t,s)}})),document.getElementById("propStatic").addEventListener("change",(e=>{const t=this.sceneManager.getSelectedObject();if(t){const i=t.uuid,s=this.sceneManager.getObjectProperties(i);s.isStatic=e.target.checked,this.sceneManager.setObjectProperties(i,s),this.physicsManager.updateObjectProperties(t,s)}})),document.getElementById("playBtn").addEventListener("click",(()=>{this.animationManager.play()})),document.getElementById("pauseBtn").addEventListener("click",(()=>{this.animationManager.pause()})),document.getElementById("stopBtn").addEventListener("click",(()=>{this.animationManager.stop()})),document.getElementById("addKeyframeBtn").addEventListener("click",(()=>{const e=this.sceneManager.getSelectedObject();if(e&&this.animationManager.getSelectedAnimation()){const t=this.animationManager.currentTime,i={position:[e.position.x,e.position.y,e.position.z],rotation:[e.rotation.x,e.rotation.y,e.rotation.z],scale:[e.scale.x,e.scale.y,e.scale.z]};e.material&&(i.color=e.material.color.getHex()),this.animationManager.addKeyframe(e,t,i),this.updateTimeline()}})),document.getElementById("addAnimation").addEventListener("click",(()=>{document.getElementById("animationModal").style.display="flex"})),document.getElementById("cancelAnimation").addEventListener("click",(()=>{document.getElementById("animationModal").style.display="none"})),document.getElementById("createAnimation").addEventListener("click",(()=>{const e=document.getElementById("animationName").value,t=parseFloat(document.getElementById("animationDuration").value),i=document.getElementById("animationLoop").value;e&&t>0&&(this.animationManager.createAnimation(e,t,i),this.updateAnimations(),this.updateTimeline(),document.getElementById("animationModal").style.display="none")})),document.getElementById("deleteAnimation").addEventListener("click",(()=>{if(this.animationManager.getSelectedAnimation()){const e=this.animationManager.getSelectedAnimation().name;this.animationManager.deleteAnimation(e),this.updateAnimations(),this.updateTimeline()}})),document.getElementById("duplicateAnimation").addEventListener("click",(()=>{if(this.animationManager.getSelectedAnimation()){const e=this.animationManager.getSelectedAnimation().name,t=`${e}_copy`;this.animationManager.duplicateAnimation(e,t),this.updateAnimations(),this.updateTimeline()}})),document.getElementById("editCurve").addEventListener("click",(()=>{document.getElementById("curveModal").style.display="flex"})),document.getElementById("cancelCurve").addEventListener("click",(()=>{document.getElementById("curveModal").style.display="none"})),document.getElementById("saveCurve").addEventListener("click",(()=>{document.getElementById("curveModal").style.display="none"})),document.querySelectorAll(".tab").forEach((e=>{e.addEventListener("click",(()=>{const t=e.dataset.tab;document.querySelectorAll(".tab").forEach((e=>e.classList.remove("active"))),e.classList.add("active"),document.querySelectorAll(".tab-content").forEach((e=>{e.classList.remove("active")})),document.getElementById(`${t}-tab`).classList.add("active")}))})),document.getElementById("physicsToggleBtn").addEventListener("click",(()=>{const e=this.physicsManager.toggle();document.getElementById("physicsToggleBtn").textContent="Physics: "+(e?"On":"Off")})),document.getElementById("exportScene").addEventListener("click",(()=>{const e=this.sceneManager.exportScene(),t=new Blob([e],{type:"application/json"}),i=URL.createObjectURL(t),s=document.createElement("a");s.href=i,s.download="scene.json",s.click(),URL.revokeObjectURL(i)})),document.getElementById("importScene").addEventListener("click",(()=>{document.getElementById("fileInput").click()})),document.getElementById("fileInput").addEventListener("change",(e=>{const t=e.target.files[0];if(t){const e=new FileReader;e.onload=e=>{this.sceneManager.importScene(e.target.result)?(this.updateHierarchy(),this.updateProperties(),this.showNotification("Scene imported successfully","success")):this.showNotification("Failed to import scene","error")},e.readAsText(t)}})),document.getElementById("exportAnimation").addEventListener("click",(()=>{if(this.animationManager.getSelectedAnimation()){const e=this.animationManager.getSelectedAnimation().name,t=this.animationManager.exportAnimation(e);if(t){const i=new Blob([t],{type:"application/json"}),s=URL.createObjectURL(i),n=document.createElement("a");n.href=s,n.download=`${e}.json`,n.click(),URL.revokeObjectURL(s)}}})),document.getElementById("importAnimation").addEventListener("click",(()=>{document.getElementById("fileInput").click()})),document.getElementById("contextMenu").addEventListener("click",(e=>{const t=e.target.dataset.action;t&&this.handleContextMenuAction(t),document.getElementById("contextMenu").style.display="none"})),document.addEventListener("click",(()=>{document.getElementById("contextMenu").style.display="none"}))}toggleToolbox(){this.toolboxVisible=!this.toolboxVisible,document.body.classList.toggle("toolbox-hidden",!this.toolboxVisible)}showPanel(e){document.querySelectorAll(".tool-panel").forEach((e=>{e.classList.remove("active")}));const t=document.getElementById(`${e}Panel`);t&&t.classList.add("active"),document.querySelectorAll(".nav-item").forEach((e=>{e.classList.remove("active")}));const i=document.querySelector(`.nav-item[data-panel="${e}"]`);i&&i.classList.add("active"),this.activePanel=e}hidePanel(e){const t=document.getElementById(`${e}Panel`);t&&t.classList.remove("active");const i=document.querySelector(`.nav-item[data-panel="${e}"]`);i&&i.classList.remove("active")}updateHierarchy(){const e=document.getElementById("hierarchy");e.innerHTML="",this.sceneManager.getAllObjects().forEach((t=>{const i=document.createElement("div");i.className="hierarchy-item",this.sceneManager.getSelectedObject()===t&&i.classList.add("selected");const s=document.createElement("span");s.className="icon",t.isLight?s.innerHTML="💡":"Group"===t.type?s.innerHTML="📁":t.isMesh?s.innerHTML="🔷":s.innerHTML="📦",i.appendChild(s);const n=document.createElement("span");n.textContent=t.name,i.appendChild(n);const o=document.createElement("span");o.className="object-visibility",o.innerHTML=this.sceneManager.getObjectProperties(t.uuid).visible?"👁️":"🚫",o.addEventListener("click",(e=>{e.stopPropagation();const i=this.sceneManager.toggleObjectVisibility(t);o.innerHTML=i?"👁️":"🚫"})),i.appendChild(o);const a=document.createElement("span");a.className="object-locked",this.sceneManager.getObjectProperties(t.uuid).locked&&a.classList.add("active"),a.innerHTML="🔒",a.addEventListener("click",(e=>{e.stopPropagation();const i=this.sceneManager.toggleObjectLock(t);a.classList.toggle("active",i)})),i.appendChild(a),i.addEventListener("click",(()=>{this.sceneManager.selectObject(t),this.updateHierarchy(),this.updateProperties()})),i.addEventListener("contextmenu",(e=>{e.preventDefault(),this.showContextMenu(e.clientX,e.clientY,t)})),e.appendChild(i)}))}updateProperties(){const e=this.sceneManager.getSelectedObject();if(!e)return document.getElementById("propName").value="",document.getElementById("propPosX").value="",document.getElementById("propPosY").value="",document.getElementById("propPosZ").value="",document.getElementById("propRotX").value="",document.getElementById("propRotY").value="",document.getElementById("propRotZ").value="",document.getElementById("propScaleX").value="",document.getElementById("propScaleY").value="",document.getElementById("propScaleZ").value="",document.getElementById("propColor").value="#4fc3f7",document.getElementById("physicsEnabled").checked=!1,void document.getElementById("physicsProperties").classList.remove("active");if(document.getElementById("propName").value=e.name||"",document.getElementById("propPosX").value=e.position.x.toFixed(2),document.getElementById("propPosY").value=e.position.y.toFixed(2),document.getElementById("propPosZ").value=e.position.z.toFixed(2),document.getElementById("propRotX").value=e.rotation.x.toFixed(2),document.getElementById("propRotY").value=e.rotation.y.toFixed(2),document.getElementById("propRotZ").value=e.rotation.z.toFixed(2),document.getElementById("propScaleX").value=e.scale.x.toFixed(2),document.getElementById("propScaleY").value=e.scale.y.toFixed(2),document.getElementById("propScaleZ").value=e.scale.z.toFixed(2),e.material&&e.material.color){const t="#"+e.material.color.getHexString();document.getElementById("propColor").value=t}const t=this.sceneManager.getObjectProperties(e.uuid);document.getElementById("physicsEnabled").checked=t.physicsEnabled||!1,document.getElementById("physicsProperties").classList.toggle("active",t.physicsEnabled),document.getElementById("propMass").value=t.mass||1,document.getElementById("propFriction").value=t.friction||.5,document.getElementById("propRestitution").value=t.restitution||.3,document.getElementById("propStatic").checked=t.isStatic||!1}updateAnimations(){const e=document.getElementById("animations");e.innerHTML="",this.animationManager.getAllAnimations().forEach((t=>{const i=document.createElement("div");i.className="animation-item",this.animationManager.getSelectedAnimation()===t&&i.classList.add("selected");const s=document.createElement("span");s.textContent=t.name,i.appendChild(s);const n=document.createElement("div");n.className="animation-item-buttons";const o=document.createElement("button");o.className="button secondary",o.textContent="Select",o.addEventListener("click",(()=>{this.animationManager.selectAnimation(t.name),this.updateAnimations(),this.updateTimeline()})),n.appendChild(o),i.appendChild(n),e.appendChild(i)}))}updateTimeline(){const e=document.getElementById("timelineTracks");if(e.innerHTML="",!this.animationManager.getSelectedAnimation())return;const t=this.animationManager.getSelectedAnimation();t.keyframes.forEach(((i,s)=>{const n=this.sceneManager.getObjectByUUID(s);if(!n)return;const o=document.createElement("div");o.className="timeline-track";const a=document.createElement("div");a.className="timeline-track-header",a.textContent=n.name,o.appendChild(a);const r=document.createElement("div");r.className="timeline-track-content",i.forEach((e=>{const i=document.createElement("div");i.className="timeline-keyframe",i.style.left=e.time/t.duration*100+"%",i.addEventListener("click",(()=>{this.animationManager.setCurrentTime(e.time),this.updateTimelinePlayhead()})),r.appendChild(i)})),o.appendChild(r),e.appendChild(o)})),this.updateTimelinePlayhead()}updateTimelinePlayhead(){const e=document.getElementById("timelinePlayhead"),t=this.animationManager.getSelectedAnimation();if(t){const i=this.animationManager.currentTime/t.duration*100;e.style.left=`${i}%`}else e.style.left="0%";document.getElementById("timelineTime").textContent=`${this.animationManager.currentTime.toFixed(2)}s`}updateToolboxToggle(){document.getElementById("toolboxToggle").innerHTML=this.toolboxVisible?'<svg viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>':'<svg viewBox="0 0 24 24"><path d="M19 13H5v-2h14v2z"/></svg>'}showContextMenu(e,t,i){const s=document.getElementById("contextMenu");s.style.left=`${e}px`,s.style.top=`${t}px`,s.style.display="block",this.contextMenuObject=i}handleContextMenuAction(e){if(this.contextMenuObject)switch(e){case"rename":const e=prompt("Enter new name:",this.contextMenuObject.name);e&&(this.contextMenuObject.name=e,this.updateHierarchy());break;case"duplicate":const t=this.contextMenuObject.clone();this.sceneManager.addObject(t,`${this.contextMenuObject.name}_copy`),this.updateHierarchy();break;case"delete":this.sceneManager.removeObject(this.contextMenuObject),this.updateHierarchy(),this.updateProperties();break;case"toggleVisibility":this.sceneManager.toggleObjectVisibility(this.contextMenuObject),this.updateHierarchy();break;case"toggleLock":this.sceneManager.toggleObjectLock(this.contextMenuObject),this.updateHierarchy()}}showNotification(e,t="info"){const i=document.getElementById("notification");i.textContent=e,i.className=`notification ${t}`,i.classList.add("show"),setTimeout((()=>{i.classList.remove("show")}),3e3)}update(){this.updateTimelinePlayhead()}}class a{constructor(e,t){this.sceneManager=e,this.animationManager=t,this.audioContext=null,this.backgroundMusic=null,this.soundEffects=[],this.voiceOver=null,this.mediaRecorder=null,this.recordedChunks=[]}init(){this.setupEventListeners();try{window.AudioContext=window.AudioContext||window.webkitAudioContext,this.audioContext=new AudioContext}catch(e){console.error("Web Audio API is not supported in this browser")}}setupEventListeners(){document.getElementById("selectBgMusic").addEventListener("click",(()=>{document.getElementById("bgMusicFile").click()})),document.getElementById("bgMusicFile").addEventListener("change",(e=>{const t=e.target.files[0];t&&this.loadBackgroundMusic(t)})),document.getElementById("selectSfx").addEventListener("click",(()=>{document.getElementById("sfxFile").click()})),document.getElementById("sfxFile").addEventListener("change",(e=>{const t=e.target.files[0];t&&this.loadSoundEffect(t)})),document.getElementById("selectVoice").addEventListener("click",(()=>{document.getElementById("voiceFile").click()})),document.getElementById("voiceFile").addEventListener("change",(e=>{const t=e.target.files[0];t&&this.loadVoiceOver(t)})),document.getElementById("recordVoice").addEventListener("click",(()=>{this.startRecording()})),document.getElementById("stopRecordVoice").addEventListener("click",(()=>{this.stopRecording()})),document.querySelectorAll("[data-transition]").forEach((e=>{e.addEventListener("click",(e=>{e.preventDefault();const t=e.target.dataset.transition;this.applySceneTransition(t)}))}))}loadBackgroundMusic(e){const t=new FileReader;t.onload=t=>{this.audioContext&&this.audioContext.decodeAudioData(t.target.result,(t=>{this.backgroundMusic=t,document.getElementById("bgMusicInput").value=e.name}),(e=>{console.error("Error decoding audio data:",e)}))},t.readAsArrayBuffer(e)}loadSoundEffect(e){const t=new FileReader;t.onload=t=>{this.audioContext&&this.audioContext.decodeAudioData(t.target.result,(t=>{this.soundEffects.push({name:e.name,buffer:t}),document.getElementById("sfxInput").value=e.name}),(e=>{console.error("Error decoding audio data:",e)}))},t.readAsArrayBuffer(e)}loadVoiceOver(e){const t=new FileReader;t.onload=t=>{this.audioContext&&this.audioContext.decodeAudioData(t.target.result,(t=>{this.voiceOver=t,document.getElementById("voiceInput").value=e.name}),(e=>{console.error("Error decoding audio data:",e)}))},t.readAsArrayBuffer(e)}playBackgroundMusic(){if(this.backgroundMusic&&this.audioContext){const e=this.audioContext.createBufferSource();e.buffer=this.backgroundMusic,e.connect(this.audioContext.destination),e.start()}}playSoundEffect(e){if(this.soundEffects[e]&&this.audioContext){const t=this.audioContext.createBufferSource();t.buffer=this.soundEffects[e].buffer,t.connect(this.audioContext.destination),t.start()}}playVoiceOver(){if(this.voiceOver&&this.audioContext){const e=this.audioContext.createBufferSource();e.buffer=this.voiceOver,e.connect(this.audioContext.destination),e.start()}}startRecording(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({audio:!0}).then((e=>{this.mediaRecorder=new MediaRecorder(e),this.recordedChunks=[],this.mediaRecorder.ondataavailable=e=>{e.data.size>0&&this.recordedChunks.push(e.data)},this.mediaRecorder.onstop=()=>{const e=new Blob(this.recordedChunks,{type:"audio/webm"}),t=(URL.createObjectURL(e),new FileReader);t.onload=e=>{this.audioContext&&this.audioContext.decodeAudioData(e.target.result,(e=>{this.voiceOver=e,document.getElementById("voiceInput").value="Recorded Voice"}),(e=>{console.error("Error decoding audio data:",e)}))},t.readAsArrayBuffer(e)},this.mediaRecorder.start()})).catch((e=>{console.error("Error accessing microphone:",e)})):console.error("MediaDevices API is not supported in this browser")}stopRecording(){this.mediaRecorder&&"inactive"!==this.mediaRecorder.state&&this.mediaRecorder.stop()}applySceneTransition(e){const t=document.getElementById("viewport"),i=document.createElement("div");switch(i.style.position="absolute",i.style.top="0",i.style.left="0",i.style.width="100%",i.style.height="100%",i.style.backgroundColor="#000",i.style.zIndex="100",i.style.pointerEvents="none",t.appendChild(i),e){case"fade":i.style.opacity="0",i.style.transition="opacity 1s",setTimeout((()=>{i.style.opacity="1",setTimeout((()=>{i.style.opacity="0",setTimeout((()=>{t.removeChild(i)}),1e3)}),500)}),10);break;case"slide":i.style.transform="translateX(-100%)",i.style.transition="transform 1s",setTimeout((()=>{i.style.transform="translateX(0)",setTimeout((()=>{i.style.transform="translateX(100%)",setTimeout((()=>{t.removeChild(i)}),1e3)}),500)}),10);break;case"zoom":i.style.transform="scale(0)",i.style.transition="transform 1s",setTimeout((()=>{i.style.transform="scale(1)",setTimeout((()=>{i.style.transform="scale(2)",setTimeout((()=>{t.removeChild(i)}),1e3)}),500)}),10);break;case"wipe":i.style.clipPath="inset(0 100% 0 0)",i.style.transition="clip-path 1s",setTimeout((()=>{i.style.clipPath="inset(0 0% 0 0)",setTimeout((()=>{i.style.clipPath="inset(0 0% 0 100%)",setTimeout((()=>{t.removeChild(i)}),1e3)}),500)}),10);break;case"dissolve":const e=20,s=Math.ceil(t.offsetWidth/e),n=Math.ceil(t.offsetHeight/e);for(let t=0;t<n;t++)for(let n=0;n<s;n++){const s=document.createElement("div");s.style.position="absolute",s.style.left=n*e+"px",s.style.top=t*e+"px",s.style.width=`${e}px`,s.style.height=`${e}px`,s.style.backgroundColor="#000",s.style.opacity="0",s.style.transition=`opacity ${.5*Math.random()+.5}s`,i.appendChild(s),setTimeout((()=>{s.style.opacity="1",setTimeout((()=>{s.style.opacity="0"}),500)}),500*Math.random())}setTimeout((()=>{t.removeChild(i)}),2e3)}}update(){}}class r{constructor(e,t,i){this.sceneManager=e,this.animationManager=t,this.mediaManager=i,this.isRecording=!1,this.isPaused=!1,this.recordedFrames=[],this.startTime=0,this.pausedTime=0,this.mediaRecorder=null,this.recordedChunks=[]}init(){this.setupEventListeners()}setupEventListeners(){document.getElementById("startRecording").addEventListener("click",(()=>{this.startRecording()})),document.getElementById("stopRecording").addEventListener("click",(()=>{this.stopRecording()})),document.getElementById("pauseRecording").addEventListener("click",(()=>{this.pauseRecording()})),document.getElementById("resumeRecording").addEventListener("click",(()=>{this.resumeRecording()})),document.getElementById("exportVideo").addEventListener("click",(()=>{this.exportAsVideo()})),document.getElementById("exportGIF").addEventListener("click",(()=>{this.exportAsGIF()})),document.getElementById("exportSequence").addEventListener("click",(()=>{this.exportAsImageSequence()})),document.getElementById("exportData").addEventListener("click",(()=>{this.exportAnimationData()}))}startRecording(){this.isRecording||(this.isRecording=!0,this.isPaused=!1,this.recordedFrames=[],this.startTime=Date.now(),this.pausedTime=0,document.getElementById("startRecording").querySelector(".recording-indicator").classList.remove("stopped"),document.getElementById("stopRecording").querySelector(".recording-indicator").classList.add("stopped"),document.getElementById("pauseRecording").querySelector(".recording-indicator").classList.add("stopped"),document.getElementById("resumeRecording").querySelector(".recording-indicator").classList.add("stopped"),this.captureFrame())}stopRecording(){this.isRecording&&(this.isRecording=!1,this.isPaused=!1,document.getElementById("startRecording").querySelector(".recording-indicator").classList.add("stopped"),document.getElementById("stopRecording").querySelector(".recording-indicator").classList.add("stopped"),document.getElementById("pauseRecording").querySelector(".recording-indicator").classList.add("stopped"),document.getElementById("resumeRecording").querySelector(".recording-indicator").classList.add("stopped"))}pauseRecording(){this.isRecording&&!this.isPaused&&(this.isPaused=!0,this.pausedTime=Date.now(),document.getElementById("pauseRecording").querySelector(".recording-indicator").classList.remove("stopped"),document.getElementById("resumeRecording").querySelector(".recording-indicator").classList.add("stopped"))}resumeRecording(){this.isRecording&&this.isPaused&&(this.isPaused=!1,this.startTime+=Date.now()-this.pausedTime,document.getElementById("pauseRecording").querySelector(".recording-indicator").classList.add("stopped"),document.getElementById("resumeRecording").querySelector(".recording-indicator").classList.remove("stopped"))}captureFrame(){if(this.isRecording){if(!this.isPaused){const e=this.sceneManager.renderer.domElement.toDataURL("image/png"),t=Date.now()-this.startTime;this.recordedFrames.push({imageData:e,timestamp:t})}requestAnimationFrame((()=>this.captureFrame()))}}exportAsVideo(){0!==this.recordedFrames.length&&this.showNotification("Video export would require a video encoding library","info")}exportAsGIF(){0!==this.recordedFrames.length&&this.showNotification("GIF export would require a GIF encoding library","info")}exportAsImageSequence(){0!==this.recordedFrames.length&&this.showNotification("Image sequence export would require a zip library","info")}exportAnimationData(){if(0===this.recordedFrames.length)return;const e={frames:this.recordedFrames,metadata:{frameCount:this.recordedFrames.length,duration:this.recordedFrames[this.recordedFrames.length-1].timestamp,fps:1e3/(this.recordedFrames[1].timestamp-this.recordedFrames[0].timestamp)}},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),i=URL.createObjectURL(t),s=document.createElement("a");s.href=i,s.download="animation_data.json",s.click(),URL.revokeObjectURL(i)}showNotification(e,t="info"){const i=document.getElementById("notification");i.textContent=e,i.className=`notification ${t}`,i.classList.add("show"),setTimeout((()=>{i.classList.remove("show")}),3e3)}update(){}}const c=new e("viewport");return{AnimationEngine:e,SceneManager:t,AnimationManager:i,PhysicsManager:s,EditManager:n,UIManager:o,RecordingManager:r,MediaManager:a,animationEngine:c}}));